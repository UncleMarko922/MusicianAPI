// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicianAPI.Data;

#nullable disable

namespace MusicianAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230425161608_AddedABunchOfStuff")]
    partial class AddedABunchOfStuff
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusicianAPI.FavoriteArtist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"));

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenereIdGenreId")
                        .HasColumnType("int");

                    b.Property<int?>("MusicianID")
                        .HasColumnType("int");

                    b.HasKey("ArtistId");

                    b.HasIndex("GenereIdGenreId");

                    b.HasIndex("MusicianID");

                    b.ToTable("FavoriteArtists");
                });

            modelBuilder.Entity("MusicianAPI.FavoriteGenre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("FavoriteGenres");
                });

            modelBuilder.Entity("MusicianAPI.Musician", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instrument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vocals")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("FavoriteMusicians");
                });

            modelBuilder.Entity("MusicianAPI.FavoriteArtist", b =>
                {
                    b.HasOne("MusicianAPI.FavoriteGenre", "GenereId")
                        .WithMany()
                        .HasForeignKey("GenereIdGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicianAPI.Musician", null)
                        .WithMany("ArtistId")
                        .HasForeignKey("MusicianID");

                    b.Navigation("GenereId");
                });

            modelBuilder.Entity("MusicianAPI.Musician", b =>
                {
                    b.Navigation("ArtistId");
                });
#pragma warning restore 612, 618
        }
    }
}
